-- Initial fuligite.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                fuligite

-- The package version.  See the Haskell package versioning policy (PVP) 
-- for standards guiding when and how versions should be incremented.
-- http://www.haskell.org/haskellwiki/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.1.0.0

-- A short (one-line) description of the package.
synopsis:            A simple scripting language that can be evaluated in pure haskell code

-- A longer description of the package.
-- description:         

-- The license under which the package is released.
license:             Apache-2.0

-- The file containing the license text.
license-file:        LICENSE

-- The package author(s).
author:              Tom Jefferys

-- An email address to which users can send suggestions, bug reports, and 
-- patches.
maintainer:          tomjefferys@gmail.com

-- A copyright notice.
-- copyright:           

category:            Language

build-type:          Simple

-- Extra files to be distributed with the package, such as examples or a 
-- README.
-- extra-source-files:  

-- Constraint on the version of Cabal needed to build this package.
cabal-version:       >=1.10


library
  -- Modules exported by the library.
  exposed-modules:  Scripting.Fuligite.Object, Scripting.Fuligite.ObjectParser,
                    Scripting.Fuligite.REPL, Scripting.Fuligite.Literal,
                    Scripting.Fuligite.LiteralType, Scripting.Fuligite.Expr,
                    Scripting.Fuligite.Eval, Scripting.Fuligite.RunFile,
                    Scripting.Fuligite.FileLoader, Scripting.Fuligite.DefaultState
  other-modules: Scripting.Fuligite.Environment, Scripting.Fuligite.Functions
                 Scripting.Fuligite.Path,
                 Scripting.Fuligite.Variable, Scripting.Fuligite.PropertyList,
                 Util.IdCache,
                 Scripting.Fuligite.GarbageCollector,
                 Scripting.Fuligite.State,
                 Scripting.Fuligite.Function.Arithmetic
  
  ghc-options:      -Wall -fwarn-incomplete-uni-patterns -optc-ffast-math
  -- Modules included in this library but not exported.
  -- other-modules:       
  
  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:    
  
  -- Other library packages from which modules are imported.
  build-depends:       base, parsec, mtl, containers, HUnit, extra
  
  -- Directories containing source files.
  hs-source-dirs:   src  
  
  -- Base language which the package is written in.
  default-language:    Haskell2010
  
executable fuligite
  hs-source-dirs:   src
  main-Is:          Main.hs
  ghc-options:      -Wall -optc-ffast-math
  other-modules:     Scripting.Fuligite.Object, Scripting.Fuligite.ObjectParser,
                    Scripting.Fuligite.REPL, Scripting.Fuligite.Literal,
                    Scripting.Fuligite.LiteralType, Scripting.Fuligite.Expr,
                    Scripting.Fuligite.Eval, Scripting.Fuligite.RunFile,
                    Scripting.Fuligite.FileLoader, Scripting.Fuligite.Environment,
                    Scripting.Fuligite.Functions,
                    Scripting.Fuligite.Path, Scripting.Fuligite.Variable,
                    Scripting.Fuligite.PropertyList,
                    Scripting.Fuligite.DefaultState,
                    Scripting.Fuligite.GarbageCollector,
                    Util.IdCache,
                    Scripting.Fuligite.State,
                    Scripting.Fuligite.Function.Arithmetic
  build-depends:       base, parsec, mtl, containers, HUnit, extra

  default-language:    Haskell2010

test-suite tests
  hs-source-dirs:   test
  type:             exitcode-stdio-1.0
  build-depends:    base, HUnit, tasty, tasty-hunit, fuligite
  ghc-options:      -Wall
  main-is:          Test.hs
  default-language:    Haskell2010


